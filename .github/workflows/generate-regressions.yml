name: TestDriver.ai / Generate / Regressions

permissions:
  actions: write
  contents: write
  statuses: write
  pull-requests: write

on:
  workflow_dispatch:
    inputs:
      website-url:
        type: string
        required: true
      base-branch:
        type: string
        required: true
      depth:
        type: number
        default: 0
    secrets:
      key:
        required: true
      GH_TOKEN:
        required: true

jobs:
  gather-markdown-files:
    name: Setup Test Matrix (./testdriver/generate/*.md)
    runs-on: ubuntu-latest
    outputs:
      markdown_files: ${{ steps.markdown_list.outputs.files }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.base-branch }}

      - name: Find all markdown files and extract filenames
        id: markdown_list
        run: |
          FILES=$(ls ./testdriver/generate/*.md)
          FILENAMES=$(basename -a $FILES | sed 's/\.md$//')
          FILES_JSON=$(echo "$FILENAMES" | jq -R -s -c 'split("\n")[:-1]')
          echo "::set-output name=files::$FILES_JSON"

  test:
    name: Run Regressions - ${{ matrix.markdown }}
    needs: gather-markdown-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        markdown: ${{ fromJson(needs.gather-markdown-files.outputs.markdown_files) }}
      fail-fast: false
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.base-branch }}

      - name: Read file content into environment variable
        id: read_file
        run: |
          CONTENT=$(cat ./testdriver/generate/${{ matrix.markdown }}.md)
          echo "MARKDOWN_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - id: generate-filename
        name: Generate Random Short Filename
        shell: bash
        run: echo "filename=$(echo ${{ github.run_id }}-${{ github.run_attempt }}-$(( RANDOM % 10000 ))).yml" >> $GITHUB_OUTPUT

      - name: Run AI Regression Test
        uses: testdriverai/action@main
        ontinue-on-error: true
        with:
          key: ${{ secrets.TESTDRIVER_API_KEY }}
          prompt: |
            ${{ env.MARKDOWN_CONTENT }}
            1. /summarize
          prerun: |
            cd $env:TEMP
            npm init -y
            npm install dashcam-chrome
            Start-Process "C:/Program Files/Google/Chrome/Application/chrome.exe" -ArgumentList "--start-maximized", "--load-extension=$(pwd)/node_modules/dashcam-chrome/build", "${{ inputs.website-url }}"
            exit
          create-pr: true
          pr-base: ${{ inputs.base-branch }}
          pr-title: "TestDriver.ai / Run Regression / ${{ matrix.markdown }}"
          pr-branch: testdriver/regression-${{ matrix.markdown }}-${{ github.run_id }}-${{ github.run_attempt }}
          pr-test-filename: ${{steps.generate-filename.outputs.filename}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORCE_COLOR: "3"

      - name: Trigger Next-Level Exploratory Workflow
        if: inputs.depth < 2
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "generate-exploratory.yml",
              ref: context.ref,
              inputs: {
                "website-url": "${{ inputs.website-url }}",
                "base-branch": "testdriver/regression-${{ matrix.markdown }}-${{ github.run_id }}-${{ github.run_attempt }}",
                "previous-file": "${{ steps.generate-filename.outputs.filename }}",
                depth: "${{ inputs.depth }}"
              }
            });
